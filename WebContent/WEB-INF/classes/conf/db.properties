jdbc.connection.driver_class=com.mysql.jdbc.Driver
jdbc.connection.url=jdbc\:mysql\://43.249.30.36:3306/xbdb_shengtaosha?characterEncoding\=utf-8&noAccessToProcedureBodies\=true
jdbc.connection.username=root
jdbc.connection.password=yingbobet.com

#连接池中保留的最小连接数
jdbc.druid.minPoolSize=5
#默认自动提交状态。如果不设置，则setAutoCommit 方法将不被调用
jdbc.druid.defaultAutoCommit=true
#属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall
jdbc.druid.filters=config,stat,log4j
#可以在这个池中同时被分配的有效连接数的最大值
jdbc.druid.maxActive=500
#初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
jdbc.druid.initialSize=5
#获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
jdbc.druid.maxWait=20000
#最小连接池数量
jdbc.druid.minIdle=0
#有两个含义：1) Destroy线程会检测连接的间隔时间  2) testWhileIdle的判断依据，详细看testWhileIdle属性的说明
jdbc.druid.timeBetweenEvictionRunsMillis=60000
#Destory线程中如果检测到当前连接的最后活跃时间和当前时间的差值大于 minEvictableIdleTimeMillis，则关闭当前连接
jdbc.druid.minEvictableIdleTimeMillis=8000
#用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。  在mysql中通常为select 'x'，在oracle中通常为select 1 from dual
jdbc.druid.validationQuery=select 1 from dual
#建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
jdbc.druid.testWhileIdle=false
#申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
jdbc.druid.testOnBorrow=false
#归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
jdbc.druid.testOnReturn=false
#要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
jdbc.druid.maxOpenPreparedStatements=200
#对于建立时间超过removeAbandonedTimeout的连接强制关闭
jdbc.druid.removeAbandoned=true
#180秒，也就是3分钟
jdbc.druid.removeAbandonedTimeout=180
#关闭abanded连接时输出错误日志
jdbc.druid.logAbandoned=true

hibernate.dialect=org.hibernate.dialect.MySQLDialect
hibernate.show_sql=false
hibernate.format_sql=true
hibernate.hbm2dll=none
hibernate.max_fetch_depth=2
hibernate.jdbc.fetch_size=50
hibernate.jdbc.batch_size=50
hibernate.bytecode.use_reflection_optimizer=true
#解决C3P0的APPARENT DEADLOCK
hibernate.c3p0.max_statements=0
